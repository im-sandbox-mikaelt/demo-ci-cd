name: CI

# Trigger CI for every PR event, when PR has target branch = main
on:
  pull_request:
    branches: [ main ]

jobs:
  # The first job lints the code base
  lint:
    name: Linter
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Linter
        uses: github/super-linter@v4
        env:
          VALIDATE_ALL_CODEBASE: false
          DEFAULT_BRANCH: main
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          VALIDATE_HTML: true
          VALIDATE_JAVASCRIPT_ES: true
          VALIDATE_JAVASCRIPT_STANDARD: true

  # CI job to run a test suite on the code base
  ci:
    name: CI
    # We want to test across mutiple OSs, defined by our matrix
    runs-on: ${{ matrix.os }}
    strategy:
      # Cancel all matrix jobs if one of them fails
      fail-fast: true
      matrix:
        # our matrix for testing acros node versions and OSs
        node-version: [12, 14]
        os: [windows-2019, ubuntu-18.04, ubuntu-20.04]
    
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      # Configure our node environment according to matrix
      - name: Setup node ${{ matrix.node-version }} on ${{ matrix.os }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}

      - name: Run test suite
        run: |
          npm ci
          npm run build --if-present
          npm test
  
  # If both linting and CI succeeds we want to deploy the code to a test environment
  deploy-test:
    name: Deploy to test env
    runs-on: ubuntu-latest
    needs: [lint, ci]
    environment:
      name: test-env
      # Environment URL can be dynamic
      url: https://${{ env.BASE_URL }}.test.company
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      
      # Determining hte target URL can for example be done in a separate step like this
      - name: Determine base url
        id: determine_url
        run: |
          echo "Determining base URL according to some criteria..."
          echo "BASE_URL="site1"" >> $GITHUB_ENV
          
      # Placeholder - this step would be some action or run commands that deploys the code
      - name: Deploy to test env
        if: ${{ success() }}
        run: |
          echo "Deploying to test environment - ${{ env.BASE_URL }}..."
          echo "This step would be replaced with e.g. a Marketplace Action for deploying to some target test env..."
      
      # Download and pack the code
      - name: Upload artifact
        if: ${{ success() }}
        uses: actions/upload-artifact@v2
        with:
          name: my-test-artifact
          path: dist/